name: Update Server and Restart Flask on PR Merge

on:
  pull_request:
    types:
      - closed

jobs:
  if_merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Check out the repository
        uses: actions/checkout@v3
        continue-on-error: false  # If this fails, stop the workflow.

      # Step 2: Connect to Tailscale
      - name: Connect to Tailscale Network
        uses: tailscale/github-action@v2
        with:
          authkey: ${{ secrets.TAILSCALE_AUTH_KEY }}
        continue-on-error: false  # If Tailscale connection fails, stop the workflow.

      # Step 3: Check Tailscale Status and add echo if Tailscale fails
      - name: Check Tailscale Status
        run: |
          if ! tailscale status; then
            echo "Tailscale connection failed. Please check the validity of the Tailscale auth key."
            exit 1  # Exit the workflow if Tailscale connection fails
          fi
        continue-on-error: false  # Stop if Tailscale status check fails.

      # Step 4: SSH into Server and Check for Updates
      - name: SSH into Server and Restart Flask
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Checking server's current branch..."
            cd ~/Documents/2024-2025_Senior_Project/server_backend || { echo "Failed to navigate to directory"; exit 1; }
            git status
            echo "Updating code from GitHub..."
            git fetch --all
            git reset --hard origin/main
            source venv/bin/activate || { echo "Failed to activate virtual environment"; exit 1; }
            echo "Stopping any running Flask processes..."
            pkill -f "flask run" || echo "No Flask process found."
            echo "Starting Flask..."
            nohup flask run --host=0.0.0.0 --port=5001 --debug &

      # Step 5: Verify Flask is running
      - name: Verify Flask is running
        run: |
          curl http://<server-ip>:5001/health || echo "Flask did not start correctly."
